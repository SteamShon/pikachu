
### create subject with json_schema and BACKWARD compatibility
POST http://localhost:8000/subject HTTP/1.1
content-type: application/json

{
    "name": "json_subject", 
    "data_format": "JSON",
    "compatibility": "BACKWARD"
}

### create subject with avro schema and BACKWARD compatibility
POST http://localhost:8000/subject HTTP/1.1
content-type: application/json

{
    "name": "avro_subject", 
    "data_format": "AVRO",
    "compatibility": "BACKWARD"
}

### update subject
PATCH  http://localhost:8000/subject/json_subject HTTP/1.1
content-type: application/json

{
    "data_format": "JSON",
    "compatibility": "NONE"
}

### get all subjects
GET http://localhost:8000/subject HTTP/1.1
content-type: application/json

### get all schemas under avro_subject
GET http://localhost:8000/subject/avro_subject HTTP/1.1
content-type: application/json

### get all schemas under json_subject
GET http://localhost:8000/subject/json_subject HTTP/1.1
content-type: application/json

### create json schema under subject
POST http://localhost:8000/subject/json_subject/schema HTTP/1.1
content-type: application/json

{
    "schema": "{\r\n  \"$id\": \"https://example.com/person.schema.json\",\r\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\r\n  \"title\": \"Person\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"firstName\": {\r\n      \"type\": \"string\",\r\n      \"description\": \"The person's first name.\"\r\n    },\r\n    \"lastName\": {\r\n      \"type\": \"string\",\r\n      \"description\": \"The person's last name.\"\r\n    },\r\n    \"age\": {\r\n      \"description\": \"Age in years which must be equal to or greater than zero.\",\r\n      \"type\": \"integer\",\r\n      \"minimum\": 0\r\n    }\r\n  }\r\n}"
}

### create avro schema under subject
POST http://localhost:8000/subject/avro_subject/schema HTTP/1.1
content-type: application/json

{
    "schema": "{\r\n    \"type\": \"record\",\r\n    \"name\": \"test\",\r\n    \"fields\": [\r\n        {\"name\": \"a\", \"type\": \"long\", \"default\": 42},\r\n        {\"name\": \"b\", \"type\": \"string\"}\r\n    ]\r\n}"
}


### update specific version of schema 
PATCH http://localhost:8000/subject/json_subject/schema/1669384508236903 HTTP/1.1
content-type: application/json

{
    "schema": "{\r\n  \"$id\": \"https://example.com/person.schema.json\",\r\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\r\n  \"title\": \"Person\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"firstName\": {\r\n      \"type\": \"string\",\r\n      \"description\": \"The person's first name.\"\r\n    },\r\n    \"lastName\": {\r\n      \"type\": \"string\",\r\n      \"description\": \"The person's last name.\"\r\n    },\r\n    \"age\": {\r\n      \"description\": \"Age in years which must be equal to or greater than zero.\",\r\n      \"type\": \"integer\",\r\n      \"minimum\": 0\r\n    }\r\n  }\r\n}"
}


### publish json data on avro schema with latest schema
POST http://localhost:8000/publish/avro_subject HTTP/1.1
content-type: application/json

[   
    "{\r\n    \"a\": 10,\r\n    \"b\": \"b_10\"\r\n}",
    "{\r\n    \"a\": 11,\r\n    \"b\": \"b_11\"\r\n}",
    "{\r\n    \"a\": \"12\",\r\n    \"b\": \"b_12\"\r\n}"
]
